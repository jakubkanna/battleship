(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,'/* reset everything */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  border: 0 solid transparent;\n}\n\n/* prevent iOS font size change */\nhtml {\n  -webkit-text-size-adjust: 100%;\n}\n\n/* reset body line-height */\nbody {\n  min-height: 100vh;\n  line-height: 1;\n  text-rendering: optimizeSpeed;\n}\n\n/* all media elements set to block and full width */\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  max-width: 100%;\n}\n\n/* inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n  line-height: inherit;\n  color: inherit;\n}\n\n/* collapse table */\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n/* assign button hover state */\nbutton,\n[role="button"] {\n  cursor: pointer;\n  background-color: transparent;\n  -webkit-tap-highlight-color: transparent;\n}\n\n/* reset anchor style */\na {\n  cursor: pointer;\n  color: inherit;\n  text-decoration: inherit;\n  -webkit-tap-highlight-color: transparent;\n}\n\n/* reset heading style */\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/* reset list style */\nol,\nul {\n  list-style: none;\n}\n\n/* reset text input style */\n[type="date"],\n[type="datetime"],\n[type="datetime-local"],\n[type="email"],\n[type="month"],\n[type="number"],\n[type="password"],\n[type="search"],\n[type="tel"],\n[type="text"],\n[type="time"],\n[type="url"],\n[type="week"],\ntextarea,\nselect {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  width: 100%;\n  &:focus {\n    outline: 0;\n  }\n}\n\n/* reset firefox placeholder opacity */\n::-moz-placeholder {\n  opacity: 1;\n}\n\n/* reset textarea style */\ntextarea {\n  vertical-align: top;\n  overflow: auto;\n}\n\n/* reset checkbox and radio style */\n[type="checkbox"],\n[type="radio"] {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  &:focus {\n    outline: 0;\n  }\n}\n\n/* remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/****************************************************************************************************************************  */\nheader,\nfooter {\n  display: flex;\n  justify-content: center;\n  padding: 6px;\n}\nbody {\n  display: grid;\n  grid-template-rows: auto 1fr;\n}\n:root {\n  --dark-indigo-color: rgb(29, 0, 80);\n\n  --indigo-color: rgb(48, 0, 130);\n  --grey-color: rgb(149, 204, 255);\n}\n\nh1 {\n  font-size: 48px;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n  padding: 6px;\n}\n\n@media (max-width: 600px) {\n  main {\n    grid-template-columns: 1fr;\n  }\n  #messageBox {\n    grid-column: span 1 !important;\n  }\n}\n\n#messageBox {\n  max-height: 250px;\n  grid-column: span 2;\n  border: 1px dashed grey;\n  overflow: auto;\n  display: grid;\n  gap: 12px;\n  padding: 12px;\n}\n\n[id^="gameboard"] {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  border: 1px dashed grey;\n  padding: 12px;\n  box-sizing: border-box;\n}\n\n.cell {\n  width: 100%;\n  padding-top: 100%;\n  border: 0.5px solid black;\n}\n\n.ship {\n  background-color: var(--indigo-color);\n}\n\n.hit {\n  background-color: var(--dark-indigo-color) !important;\n}\n\n.miss {\n  background-color: var(--grey-color);\n}\n#roundBox {\n  text-transform: capitalize;\n  position: sticky;\n  background-color: white;\n  top: 0;\n}\n#messageBox {\n  position: relative;\n}\n#messageBox > *:not(#roundBox) {\n  padding-left: 6px;\n}\n\n#winnerBox {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  display: none;\n}\n\n.winMessage {\n  font-weight: 800;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,qBAAqB;AACrB;;;EAGE,sBAAsB;AACxB;;AAEA;EACE,SAAS;EACT,UAAU;EACV,2BAA2B;AAC7B;;AAEA,iCAAiC;AACjC;EACE,8BAA8B;AAChC;;AAEA,2BAA2B;AAC3B;EACE,iBAAiB;EACjB,cAAc;EACd,6BAA6B;AAC/B;;AAEA,mDAAmD;AACnD;;;;;;;;EAQE,cAAc;EACd,eAAe;AACjB;;AAEA,yCAAyC;AACzC;;;;EAIE,aAAa;EACb,oBAAoB;EACpB,cAAc;AAChB;;AAEA,mBAAmB;AACnB;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA,8BAA8B;AAC9B;;EAEE,eAAe;EACf,6BAA6B;EAC7B,wCAAwC;AAC1C;;AAEA,uBAAuB;AACvB;EACE,eAAe;EACf,cAAc;EACd,wBAAwB;EACxB,wCAAwC;AAC1C;;AAEA,wBAAwB;AACxB;;;;;;EAME,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA,qBAAqB;AACrB;;EAEE,gBAAgB;AAClB;;AAEA,2BAA2B;AAC3B;;;;;;;;;;;;;;;EAeE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB,WAAW;EACX;IACE,UAAU;EACZ;AACF;;AAEA,sCAAsC;AACtC;EACE,UAAU;AACZ;;AAEA,yBAAyB;AACzB;EACE,mBAAmB;EACnB,cAAc;AAChB;;AAEA,mCAAmC;AACnC;;EAEE,wBAAwB;EACxB,qBAAqB;EACrB,gBAAgB;EAChB;IACE,UAAU;EACZ;AACF;;AAEA,gGAAgG;AAChG;EACE;IACE,qBAAqB;EACvB;;EAEA;;;IAGE,qCAAqC;IACrC,uCAAuC;IACvC,sCAAsC;IACtC,gCAAgC;EAClC;AACF;;AAEA,gIAAgI;AAChI;;EAEE,aAAa;EACb,uBAAuB;EACvB,YAAY;AACd;AACA;EACE,aAAa;EACb,4BAA4B;AAC9B;AACA;EACE,mCAAmC;;EAEnC,+BAA+B;EAC/B,gCAAgC;AAClC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,SAAS;EACT,YAAY;AACd;;AAEA;EACE;IACE,0BAA0B;EAC5B;EACA;IACE,8BAA8B;EAChC;AACF;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,uBAAuB;EACvB,cAAc;EACd,aAAa;EACb,SAAS;EACT,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,uBAAuB;EACvB,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,WAAW;EACX,iBAAiB;EACjB,yBAAyB;AAC3B;;AAEA;EACE,qCAAqC;AACvC;;AAEA;EACE,qDAAqD;AACvD;;AAEA;EACE,mCAAmC;AACrC;AACA;EACE,0BAA0B;EAC1B,gBAAgB;EAChB,uBAAuB;EACvB,MAAM;AACR;AACA;EACE,kBAAkB;AACpB;AACA;EACE,iBAAiB;AACnB;;AAEA;EACE,eAAe;EACf,MAAM;EACN,OAAO;EACP,YAAY;EACZ,WAAW;EACX,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB",sourcesContent:['/* reset everything */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n* {\n  margin: 0;\n  padding: 0;\n  border: 0 solid transparent;\n}\n\n/* prevent iOS font size change */\nhtml {\n  -webkit-text-size-adjust: 100%;\n}\n\n/* reset body line-height */\nbody {\n  min-height: 100vh;\n  line-height: 1;\n  text-rendering: optimizeSpeed;\n}\n\n/* all media elements set to block and full width */\nimg,\nsvg,\nvideo,\ncanvas,\naudio,\niframe,\nembed,\nobject {\n  display: block;\n  max-width: 100%;\n}\n\n/* inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n  line-height: inherit;\n  color: inherit;\n}\n\n/* collapse table */\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n/* assign button hover state */\nbutton,\n[role="button"] {\n  cursor: pointer;\n  background-color: transparent;\n  -webkit-tap-highlight-color: transparent;\n}\n\n/* reset anchor style */\na {\n  cursor: pointer;\n  color: inherit;\n  text-decoration: inherit;\n  -webkit-tap-highlight-color: transparent;\n}\n\n/* reset heading style */\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\n/* reset list style */\nol,\nul {\n  list-style: none;\n}\n\n/* reset text input style */\n[type="date"],\n[type="datetime"],\n[type="datetime-local"],\n[type="email"],\n[type="month"],\n[type="number"],\n[type="password"],\n[type="search"],\n[type="tel"],\n[type="text"],\n[type="time"],\n[type="url"],\n[type="week"],\ntextarea,\nselect {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  width: 100%;\n  &:focus {\n    outline: 0;\n  }\n}\n\n/* reset firefox placeholder opacity */\n::-moz-placeholder {\n  opacity: 1;\n}\n\n/* reset textarea style */\ntextarea {\n  vertical-align: top;\n  overflow: auto;\n}\n\n/* reset checkbox and radio style */\n[type="checkbox"],\n[type="radio"] {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  &:focus {\n    outline: 0;\n  }\n}\n\n/* remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n\n/****************************************************************************************************************************  */\nheader,\nfooter {\n  display: flex;\n  justify-content: center;\n  padding: 6px;\n}\nbody {\n  display: grid;\n  grid-template-rows: auto 1fr;\n}\n:root {\n  --dark-indigo-color: rgb(29, 0, 80);\n\n  --indigo-color: rgb(48, 0, 130);\n  --grey-color: rgb(149, 204, 255);\n}\n\nh1 {\n  font-size: 48px;\n}\n\nmain {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 12px;\n  padding: 6px;\n}\n\n@media (max-width: 600px) {\n  main {\n    grid-template-columns: 1fr;\n  }\n  #messageBox {\n    grid-column: span 1 !important;\n  }\n}\n\n#messageBox {\n  max-height: 250px;\n  grid-column: span 2;\n  border: 1px dashed grey;\n  overflow: auto;\n  display: grid;\n  gap: 12px;\n  padding: 12px;\n}\n\n[id^="gameboard"] {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  border: 1px dashed grey;\n  padding: 12px;\n  box-sizing: border-box;\n}\n\n.cell {\n  width: 100%;\n  padding-top: 100%;\n  border: 0.5px solid black;\n}\n\n.ship {\n  background-color: var(--indigo-color);\n}\n\n.hit {\n  background-color: var(--dark-indigo-color) !important;\n}\n\n.miss {\n  background-color: var(--grey-color);\n}\n#roundBox {\n  text-transform: capitalize;\n  position: sticky;\n  background-color: white;\n  top: 0;\n}\n#messageBox {\n  position: relative;\n}\n#messageBox > *:not(#roundBox) {\n  padding-left: 6px;\n}\n\n#winnerBox {\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  display: none;\n}\n\n.winMessage {\n  font-weight: 800;\n}\n'],sourceRoot:""}]);const l=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(a[s]=!0)}for(var u=0;u<n.length;u++){var c=[].concat(n[u]);r&&a[c[0]]||(void 0!==i&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=i),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],l=0;l<n.length;l++){var s=n[l],u=r.base?s[0]+r.base:s[0],c=i[u]||0,p="".concat(u," ").concat(c);i[u]=c+1;var f=t(p),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==f)e[f].references++,e[f].updater(d);else{var A=o(d,r);r.byIndex=l,e.splice(l,0,{identifier:p,updater:A,references:1})}a.push(p)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var l=t(i[a]);e[l].references--}for(var s=r(n,o),u=0;u<i.length;u++){var c=t(i[u]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),l=t(565),s=t.n(l),u=t(216),c=t.n(u),p=t(589),f=t.n(p),d=t(426),A={};function y(n){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},y(n)}function m(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,i,a,l=[],s=!0,u=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(l.push(r.value),l.length!==e);s=!0);}catch(n){u=!0,o=n}finally{try{if(!s&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(u)throw o}}return l}}(n,e)||function(n,e){if(n){if("string"==typeof n)return h(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?h(n,e):void 0}}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function h(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function g(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,v(r.key),r)}}function v(n){var e=function(n,e){if("object"!=y(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==y(e)?e:String(e)}A.styleTagTransform=f(),A.setAttributes=s(),A.insert=a().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=c(),e()(d.Z,A),d.Z&&d.Z.locals&&d.Z.locals;var b=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.occupied=[],this.empty=n.generatedBoard}var e,t,r;return e=n,r=[{key:"generateShipSpace",value:function(n,e,t){for(var r=[],o=m(e,2),i=o[0],a=o[1],l=function(n,e){return["x"===t?n+i:i,"y"===t?n+a:a]},s=0;s<n.length;s++){var u=m(l(s),2),c=u[0],p=u[1];if(!this.isValidRange(c,p))return!1;r.push([c,p])}return r}},{key:"isValidRange",value:function(n,e){return n>=0&&n<=9&&e>=0&&e<=9}},{key:"generateShipArea",value:function(n,e,t){for(var r=[],o=m(e,2),i=o[0],a=o[1],l="y"===t?i+1:i+n.length,s="x"===t?a+1:a+n.length,u=i-1;u<=l;u++)for(var c=a-1;c<=s;c++)this.isValidRange(u,c)&&r.push([u,c]);return r}},{key:"generatedBoard",get:function(){for(var n=[],e=0;e<10;e++)for(var t=0;t<10;t++)n.push([t,e]);return n}},{key:"filterOutSpace",value:function(n,e){return e.filter((function(e){return!n.some((function(n){return n[0]===e[0]&&n[1]===e[1]}))}))}}],(t=[{key:"place",value:function(e,t,r){var o=n.generateShipSpace(e,t,r),i=n.generateShipArea(e,t,r);if(!o)return!1;if(this.findSpace(o)){var a=n.filterOutSpace(o,i);return this.launchShip(e,o,a),this.reduceEmptySpace(i),!0}return!1}},{key:"findSpace",value:function(n){var e=this;return n.every((function(n){return e.empty.some((function(e){return e[0]===n[0]&&e[1]===n[1]}))}))}},{key:"launchShip",value:function(n,e,t){n.space=e,n.margin=t,this.occupied.push(n)}},{key:"reduceEmptySpace",value:function(n){this.empty=this.empty.filter((function(e){return!n.some((function(n){return n[0]===e[0]&&n[1]===e[1]}))}))}}])&&g(e.prototype,t),r&&g(e,r),Object.defineProperty(e,"prototype",{writable:!1}),n}();function C(n,e){return e.some((function(e){return r=n,(t=e)[0]===r[0]&&t[1]===r[1];var t,r}))}function E(){return[Math.floor(10*Math.random()),Math.floor(10*Math.random())]}function B(){var n=["x","y"];return n[Math.floor(Math.random()*n.length)]}function w(n){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},w(n)}function x(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,S(r.key),r)}}function S(n){var e=function(n,e){if("object"!=w(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=w(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==w(e)?e:String(e)}var k=function(){function n(e){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.length=e,this.damage=0,this.space=[],this.margin=[]}var e,t;return e=n,(t=[{key:"hit",value:function(){this.damage++}},{key:"isSunk",get:function(){return this.damage===this.length}},{key:"isFound",value:function(n){return C(n,this.space)}},{key:"isMargin",value:function(n){return C(n,this.margin)}}])&&x(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function P(n){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},P(n)}function j(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=M(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,o=function(){};return{s:o,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,l=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return a=n.done,n},e:function(n){l=!0,i=n},f:function(){try{a||null==t.return||t.return()}finally{if(l)throw i}}}}function I(n){return function(n){if(Array.isArray(n))return O(n)}(n)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(n)||M(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function M(n,e){if(n){if("string"==typeof n)return O(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?O(n,e):void 0}}function O(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function T(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,F(r.key),r)}}function F(n){var e=function(n,e){if("object"!=P(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==P(e)?e:String(e)}var R=function(){function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.name,this.gameboard=new b,this.onTargetShots=[],this.missedShots=[]}var e,t;return e=n,(t=[{key:"fleet",get:function(){return[new k(5),new k(4),new k(3),new k(3),new k(2)]}},{key:"placeShipsRand",value:function(){var n,e=j(I(this.fleet));try{for(e.s();!(n=e.n()).done;)for(var t=n.value,r=!1;!r;){var o=E(),i=B();r=this.gameboard.place(t,o,i)}}catch(n){e.e(n)}finally{e.f()}}},{key:"attack",value:function(n,e){return!this.alreadyAttacked(e)&&(this.handleAttackResult(n,e)||this.missedShots.push(e),!0)}},{key:"handleAttackResult",value:function(n,e){if(!n.isCoordEmpty(e)){var t,r=j(n.gameboard.occupied);try{for(r.s();!(t=r.n()).done;){var o,i=t.value;if(i.isFound(e))return i.hit(),this.onTargetShots.push(e),i.isSunk&&(o=this.onTargetShots).push.apply(o,I(i.margin).concat(I(i.space))),!0;if(i.isMargin(e))return!1}}catch(n){r.e(n)}finally{r.f()}}return!1}},{key:"isCoordEmpty",value:function(n){return C(n,this.gameboard.empty)}},{key:"alreadyAttacked",value:function(n){return C(n,[].concat(I(this.missedShots),I(this.onTargetShots)))}}])&&T(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function z(n){return z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},z(n)}function q(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,U(r.key),r)}}function U(n){var e=function(n,e){if("object"!=z(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=z(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==z(e)?e:String(e)}var L=function(){function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:2;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this._players=this.createPlayers(e),this.setPlayerNames(),this.round=1,this._turn=0,this.defeated=[]}var e,t,r;return e=n,r=[{key:"areAllShipsSunk",value:function(n){return n.gameboard.occupied.every((function(n){return n.isSunk}))}}],(t=[{key:"players",get:function(){return this._players}},{key:"turn",get:function(){return this._turn}},{key:"createPlayers",value:function(n){return Array.from({length:n},(function(){return new R}))}},{key:"setPlayerNames",value:function(){this._players=this._players.map((function(n,e){var t=new R;return t.name="Player"+(e+1),t}))}},{key:"nextRound",value:function(){this.round++,this._turn=(this._turn+1)%this._players.length}},{key:"isWinner",value:function(e){return this._players.some((function(t){return t!==e&&n.areAllShipsSunk(t)}))}}])&&q(e.prototype,t),r&&q(e,r),Object.defineProperty(e,"prototype",{writable:!1}),n}();function N(n){return N="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},N(n)}function W(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=_(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,o=function(){};return{s:o,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,l=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return a=n.done,n},e:function(n){l=!0,i=n},f:function(){try{a||null==t.return||t.return()}finally{if(l)throw i}}}}function D(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var t=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=t){var r,o,i,a,l=[],s=!0,u=!1;try{if(i=(t=t.call(n)).next,0===e){if(Object(t)!==t)return;s=!1}else for(;!(s=(r=i.call(t)).done)&&(l.push(r.value),l.length!==e);s=!0);}catch(n){u=!0,o=n}finally{try{if(!s&&null!=t.return&&(a=t.return(),Object(a)!==a))return}finally{if(u)throw o}}return l}}(n,e)||_(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _(n,e){if(n){if("string"==typeof n)return Z(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?Z(n,e):void 0}}function Z(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function Y(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,G(r.key),r)}}function G(n){var e=function(n,e){if("object"!=N(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=N(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==N(e)?e:String(e)}var H=function(){function n(e){var t;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.game=e,this.containers=this.renderBoards(),this.messageBox=function(){var n=document.createElement("div");n.id="messageBox";var e=document.createElement("div");e.id="roundBox",n.appendChild(e);var t=document.createElement("hr");return n.appendChild(t),document.querySelector("main").appendChild(n),n}(),this.winnerBox=((t=document.createElement("div")).id="winnerBox",void document.body.appendChild(t))}var e,t;return e=n,t=[{key:"renderBoards",value:function(){var n=[];return this.game.players.forEach((function(e){var t,r=function(n){var e=document.createElement("div");return e.id="gameboard-".concat(n),document.querySelector("main").appendChild(e),e}(e.name);!function(n,e){e.forEach((function(e){n.appendChild(e)}))}(r,(t=e.gameboard.empty.map((function(n){return function(n){var e=document.createElement("div");return e.classList.add("cell"),e.id="".concat(n[0],"-").concat(n[1]),e}(n)})),function(n){if(Array.isArray(n))return Z(n)}(t)||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(t)||_(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())),n.push(r)})),n}},{key:"getCoordFromCell",value:function(n){var e=n.id;if(e){var t=D(e.split("-").map(Number),2);return[t[0],t[1]]}return console.error("Invalid or missing id for the cell element"),null}},{key:"getEnemyIndexFromCell",value:function(n){var e=n.id.match(/gameboard-Player(\d+)/);return e&&void 0!==e[1]?parseInt(e[1],10):(console.error("Invalid or missing ID format for the element"),null)}},{key:"getCoordFromPrompt",value:function(n){var e=prompt("You are placing ship of length ".concat(n,". Enter coordinates in the format 'x,y':"));if(e){var t=D(e.split(",").map(Number),2),r=t[0],o=t[1];if(!isNaN(r)&&!isNaN(o))return[r,o];console.error("Invalid input. Please enter valid numerical coordinates.")}else console.error("User canceled or entered empty input.");return null}},{key:"getAxisFromPrompt",value:function(){var n=prompt("Enter 'x' or 'y':");if(n){var e=n.toLowerCase();if("x"===e||"y"===e)return e;console.error("Invalid input. Please enter 'x' or 'y'.")}else console.error("User canceled or entered empty input.");return null}},{key:"getPlacementModeFromPrompt",value:function(){return prompt("Please press 'OK' to choose random ship placement, or enter 'custom' to manually customize the placement.")}},{key:"addListeners",value:function(n,e){document.querySelector(e).addEventListener("click",n)}},{key:"round",value:function(n,e){var t="Round ".concat(n,": ").concat(e.name," turn.");this.appendRoundMessage(t,"roundMessage")}},{key:"attack",value:function(n,e,t){var r,o="".concat(n.name,": hit ").concat(e.name," ship at [").concat(t,"]."),i="".concat(n.name,": miss."),a=W(n.onTargetShots);try{for(a.s();!(r=a.n()).done;)V(e,r.value).classList.add("hit")}catch(n){a.e(n)}finally{a.f()}var l,s=W(n.missedShots);try{for(s.s();!(l=s.n()).done;)V(e,l.value).classList.add("miss")}catch(n){s.e(n)}finally{s.f()}n.onTargetShots.length>0?this.appendMessage(o,"hitMessage"):n.missedShots.length>0&&this.appendMessage(i,"missMessage")}},{key:"ships",value:function(n){var e,t=W(n.gameboard.occupied);try{for(t.s();!(e=t.n()).done;){var r,o=W(e.value.space);try{for(o.s();!(r=o.n()).done;){var i=V(n,r.value);i?i.classList.add("ship"):console.error("Element with selector ".concat(elementSelector," not found."))}}catch(n){o.e(n)}finally{o.f()}}}catch(n){t.e(n)}finally{t.f()}}},{key:"winner",value:function(n){var e="-- ".concat(n.name," wins the game --");this.appendMessage(e,"winMessage"),this.showWinner(n.name)}},{key:"invalidPlacement",value:function(){console.log("Invalid placement. Try again.")}},{key:"appendMessage",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"message",t=document.createElement("p");t.classList.add(e),t.textContent=n,this.messageBox.append(t),this.messageBox.scrollTop=this.messageBox.scrollHeight}},{key:"appendRoundMessage",value:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"round",t=document.getElementById("roundBox");t.innerHTML="";var r=document.createElement("p");r.classList.add(e),r.textContent=n,t.append(r)}},{key:"showWinner",value:function(n){var e=document.getElementById("winnerBox"),t=document.createElement("p");t.textContent="-- ".concat(n," wins the game --"),e.append(t),e.style.display="flex"}}],t&&Y(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();function V(n,e){var t=D(e,2),r=t[0],o=t[1],i="#gameboard-".concat(n.name,' [id="').concat(r,"-").concat(o,'"]');return document.querySelector(i)}function $(n){return $="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},$(n)}function X(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}function J(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,K(r.key),r)}}function K(n){var e=function(n,e){if("object"!=$(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=$(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==$(e)?e:String(e)}var Q=function(){function n(){var e,t,r,o=this;!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e=this,r=function(n){if(o.isCellElement(n)&&!o.isRoundInProgress&&!o.winnerIsFound){o.isRoundInProgress=!0;var e=o.display.getCoordFromCell(n.target),t=n.target.parentElement,r=o.display.getEnemyIndexFromCell(t)-1;o.playerAction(r,e),1===o.game.turn&&setTimeout((function(){o.computerAction(),o.isRoundInProgress=!1}),1e3)}},(t=K(t="playRound"))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,this.game=new L,this.display=new H(this.game),this.isRoundInProgress=!1,this.winnerIsFound=!1}var e,t;return e=n,(t=[{key:"currentRound",get:function(){return this.game.round}},{key:"currentPlayer",get:function(){return this.game.players[this.game.turn]}},{key:"init",value:function(){this.placeShips(),this.display.addListeners(this.playRound,"#gameboard-Player2"),this.display.round(this.currentRound,this.currentPlayer)}},{key:"placeShips",value:function(){var n=this.game.players[0];""===this.display.getPlacementModeFromPrompt()?(n.placeShipsRand(),this.display.ships(this.currentPlayer)):this.playerPlaceShipsFromPrompt(n),this.game.players[1].placeShipsRand()}},{key:"playerPlaceShipsFromPrompt",value:function(n){var e,t=function(n,e){var t="undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(!t){if(Array.isArray(n)||(t=function(n,e){if(n){if("string"==typeof n)return X(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?X(n,e):void 0}}(n))||e&&n&&"number"==typeof n.length){t&&(n=t);var r=0,o=function(){};return{s:o,n:function(){return r>=n.length?{done:!0}:{done:!1,value:n[r++]}},e:function(n){throw n},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,a=!0,l=!1;return{s:function(){t=t.call(n)},n:function(){var n=t.next();return a=n.done,n},e:function(n){l=!0,i=n},f:function(){try{a||null==t.return||t.return()}finally{if(l)throw i}}}}(this.game.players[0].fleet);try{for(t.s();!(e=t.n()).done;)for(var r=e.value,o=!1;!o;){var i=this.coordFromDOM(r.length),a=this.axisFromDOM();o=n.gameboard.place(r,i,a),this.display.ships(this.currentPlayer),o||this.display.invalidPlacement()}}catch(n){t.e(n)}finally{t.f()}}},{key:"coordFromDOM",value:function(n){return this.display.getCoordFromPrompt(n)}},{key:"axisFromDOM",value:function(){return this.display.getAxisFromPrompt()}},{key:"playerAction",value:function(n,e){if(!this.checkForWinner()){var t=this.game.players[n],r=this.currentPlayer;r.attack(t,e)||console.error("Can't attack the same coordinates twice."),this.display.attack(r,t,e),this.game.nextRound(),this.display.round(this.currentRound,this.currentPlayer)}}},{key:"computerAction",value:function(){if(!this.checkForWinner()){for(var n=this.game.players[0],e=this.game.players[1],t=!1;!t;){var r=E();(t=e.attack(n,r))&&this.display.attack(e,n,r)}this.game.nextRound(),this.display.round(this.currentRound,this.currentPlayer)}}},{key:"checkForWinner",value:function(){return!!this.game.isWinner(this.currentPlayer)&&(this.display.winner(this.currentPlayer),this.winnerIsFound=!0,!0)}},{key:"isCellElement",value:function(n){return n.target&&n.target.classList.contains("cell")}}])&&J(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),n}();window.gameController=new Q,gameController.init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TUFFRCxXQUNFLFFBQUlySCxLQUFLK00sS0FBSzhGLFNBQVM3UyxLQUFLOFIsaUJBQzFCOVIsS0FBSzRRLFFBQVFrQyxPQUFPOVMsS0FBSzhSLGVBQ3pCOVIsS0FBS2dSLGVBQWdCLEdBQ2QsRUFHWCxHQUFDLENBQUE1SyxJQUFBLGdCQUFBaUIsTUFFRCxTQUFjakQsR0FDWixPQUFPQSxFQUFFUixRQUFVUSxFQUFFUixPQUFPcUssVUFBVThFLFNBQVMsT0FDakQsTSxvRUFBQ2xDLENBQUEsQ0F6SmlCLEdBNEpwQjdNLE9BQU9nUCxlQUFpQixJQUFJbkMsRUFDNUJtQyxlQUFlQyxNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5kZXhfbW9kdWxlcy9kYXRhL2dhbWVib2FyZC9nYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleF9tb2R1bGVzL3V0aWxpdGllcy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2luZGV4X21vZHVsZXMvZGF0YS9zaGlwL3NoaXAuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleF9tb2R1bGVzL2RhdGEvcGxheWVyL3BsYXllci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2luZGV4X21vZHVsZXMvZGF0YS9nYW1lL2dhbWUuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleF9tb2R1bGVzL2Rpc3BsYXkvZGlzcGxheS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAvKiByZXNldCBldmVyeXRoaW5nICovXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG4qIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDAgc29saWQgdHJhbnNwYXJlbnQ7XG59XG5cbi8qIHByZXZlbnQgaU9TIGZvbnQgc2l6ZSBjaGFuZ2UgKi9cbmh0bWwge1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG59XG5cbi8qIHJlc2V0IGJvZHkgbGluZS1oZWlnaHQgKi9cbmJvZHkge1xuICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgbGluZS1oZWlnaHQ6IDE7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZVNwZWVkO1xufVxuXG4vKiBhbGwgbWVkaWEgZWxlbWVudHMgc2V0IHRvIGJsb2NrIGFuZCBmdWxsIHdpZHRoICovXG5pbWcsXG5zdmcsXG52aWRlbyxcbmNhbnZhcyxcbmF1ZGlvLFxuaWZyYW1lLFxuZW1iZWQsXG5vYmplY3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWF4LXdpZHRoOiAxMDAlO1xufVxuXG4vKiBpbmhlcml0IGZvbnRzIGZvciBpbnB1dHMgYW5kIGJ1dHRvbnMgKi9cbmlucHV0LFxuYnV0dG9uLFxudGV4dGFyZWEsXG5zZWxlY3Qge1xuICBmb250OiBpbmhlcml0O1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDtcbiAgY29sb3I6IGluaGVyaXQ7XG59XG5cbi8qIGNvbGxhcHNlIHRhYmxlICovXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwO1xufVxuXG4vKiBhc3NpZ24gYnV0dG9uIGhvdmVyIHN0YXRlICovXG5idXR0b24sXG5bcm9sZT1cImJ1dHRvblwiXSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG59XG5cbi8qIHJlc2V0IGFuY2hvciBzdHlsZSAqL1xuYSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLyogcmVzZXQgaGVhZGluZyBzdHlsZSAqL1xuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbn1cblxuLyogcmVzZXQgbGlzdCBzdHlsZSAqL1xub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbi8qIHJlc2V0IHRleHQgaW5wdXQgc3R5bGUgKi9cblt0eXBlPVwiZGF0ZVwiXSxcblt0eXBlPVwiZGF0ZXRpbWVcIl0sXG5bdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdLFxuW3R5cGU9XCJlbWFpbFwiXSxcblt0eXBlPVwibW9udGhcIl0sXG5bdHlwZT1cIm51bWJlclwiXSxcblt0eXBlPVwicGFzc3dvcmRcIl0sXG5bdHlwZT1cInNlYXJjaFwiXSxcblt0eXBlPVwidGVsXCJdLFxuW3R5cGU9XCJ0ZXh0XCJdLFxuW3R5cGU9XCJ0aW1lXCJdLFxuW3R5cGU9XCJ1cmxcIl0sXG5bdHlwZT1cIndlZWtcIl0sXG50ZXh0YXJlYSxcbnNlbGVjdCB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICB3aWR0aDogMTAwJTtcbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogMDtcbiAgfVxufVxuXG4vKiByZXNldCBmaXJlZm94IHBsYWNlaG9sZGVyIG9wYWNpdHkgKi9cbjo6LW1vei1wbGFjZWhvbGRlciB7XG4gIG9wYWNpdHk6IDE7XG59XG5cbi8qIHJlc2V0IHRleHRhcmVhIHN0eWxlICovXG50ZXh0YXJlYSB7XG4gIHZlcnRpY2FsLWFsaWduOiB0b3A7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKiByZXNldCBjaGVja2JveCBhbmQgcmFkaW8gc3R5bGUgKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICAtbW96LWFwcGVhcmFuY2U6IG5vbmU7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7XG4gIH1cbn1cblxuLyogcmVtb3ZlIGFsbCBhbmltYXRpb25zLCB0cmFuc2l0aW9ucyBhbmQgc21vb3RoIHNjcm9sbCBmb3IgcGVvcGxlIHRoYXQgcHJlZmVyIG5vdCB0byBzZWUgdGhlbSAqL1xuQG1lZGlhIChwcmVmZXJzLXJlZHVjZWQtbW90aW9uOiByZWR1Y2UpIHtcbiAgaHRtbDpmb2N1cy13aXRoaW4ge1xuICAgIHNjcm9sbC1iZWhhdmlvcjogYXV0bztcbiAgfVxuXG4gICosXG4gICo6OmJlZm9yZSxcbiAgKjo6YWZ0ZXIge1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogMSAhaW1wb3J0YW50O1xuICAgIHRyYW5zaXRpb24tZHVyYXRpb246IDAuMDFtcyAhaW1wb3J0YW50O1xuICAgIHNjcm9sbC1iZWhhdmlvcjogYXV0byAhaW1wb3J0YW50O1xuICB9XG59XG5cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICAqL1xuaGVhZGVyLFxuZm9vdGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBhZGRpbmc6IDZweDtcbn1cbmJvZHkge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gMWZyO1xufVxuOnJvb3Qge1xuICAtLWRhcmstaW5kaWdvLWNvbG9yOiByZ2IoMjksIDAsIDgwKTtcblxuICAtLWluZGlnby1jb2xvcjogcmdiKDQ4LCAwLCAxMzApO1xuICAtLWdyZXktY29sb3I6IHJnYigxNDksIDIwNCwgMjU1KTtcbn1cblxuaDEge1xuICBmb250LXNpemU6IDQ4cHg7XG59XG5cbm1haW4ge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XG4gIGdhcDogMTJweDtcbiAgcGFkZGluZzogNnB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgbWFpbiB7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG4gIH1cbiAgI21lc3NhZ2VCb3gge1xuICAgIGdyaWQtY29sdW1uOiBzcGFuIDEgIWltcG9ydGFudDtcbiAgfVxufVxuXG4jbWVzc2FnZUJveCB7XG4gIG1heC1oZWlnaHQ6IDI1MHB4O1xuICBncmlkLWNvbHVtbjogc3BhbiAyO1xuICBib3JkZXI6IDFweCBkYXNoZWQgZ3JleTtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdhcDogMTJweDtcbiAgcGFkZGluZzogMTJweDtcbn1cblxuW2lkXj1cImdhbWVib2FyZFwiXSB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMCwgMWZyKTtcbiAgYm9yZGVyOiAxcHggZGFzaGVkIGdyZXk7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG59XG5cbi5jZWxsIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctdG9wOiAxMDAlO1xuICBib3JkZXI6IDAuNXB4IHNvbGlkIGJsYWNrO1xufVxuXG4uc2hpcCB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWluZGlnby1jb2xvcik7XG59XG5cbi5oaXQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kYXJrLWluZGlnby1jb2xvcikgIWltcG9ydGFudDtcbn1cblxuLm1pc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmV5LWNvbG9yKTtcbn1cbiNyb3VuZEJveCB7XG4gIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgdG9wOiAwO1xufVxuI21lc3NhZ2VCb3gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG59XG4jbWVzc2FnZUJveCA+ICo6bm90KCNyb3VuZEJveCkge1xuICBwYWRkaW5nLWxlZnQ6IDZweDtcbn1cblxuI3dpbm5lckJveCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLndpbk1lc3NhZ2Uge1xuICBmb250LXdlaWdodDogODAwO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLHFCQUFxQjtBQUNyQjs7O0VBR0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsU0FBUztFQUNULFVBQVU7RUFDViwyQkFBMkI7QUFDN0I7O0FBRUEsaUNBQWlDO0FBQ2pDO0VBQ0UsOEJBQThCO0FBQ2hDOztBQUVBLDJCQUEyQjtBQUMzQjtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsNkJBQTZCO0FBQy9COztBQUVBLG1EQUFtRDtBQUNuRDs7Ozs7Ozs7RUFRRSxjQUFjO0VBQ2QsZUFBZTtBQUNqQjs7QUFFQSx5Q0FBeUM7QUFDekM7Ozs7RUFJRSxhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLGNBQWM7QUFDaEI7O0FBRUEsbUJBQW1CO0FBQ25CO0VBQ0UseUJBQXlCO0VBQ3pCLGlCQUFpQjtBQUNuQjs7QUFFQSw4QkFBOEI7QUFDOUI7O0VBRUUsZUFBZTtFQUNmLDZCQUE2QjtFQUM3Qix3Q0FBd0M7QUFDMUM7O0FBRUEsdUJBQXVCO0FBQ3ZCO0VBQ0UsZUFBZTtFQUNmLGNBQWM7RUFDZCx3QkFBd0I7RUFDeEIsd0NBQXdDO0FBQzFDOztBQUVBLHdCQUF3QjtBQUN4Qjs7Ozs7O0VBTUUsa0JBQWtCO0VBQ2xCLG9CQUFvQjtBQUN0Qjs7QUFFQSxxQkFBcUI7QUFDckI7O0VBRUUsZ0JBQWdCO0FBQ2xCOztBQUVBLDJCQUEyQjtBQUMzQjs7Ozs7Ozs7Ozs7Ozs7O0VBZUUsd0JBQXdCO0VBQ3hCLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsV0FBVztFQUNYO0lBQ0UsVUFBVTtFQUNaO0FBQ0Y7O0FBRUEsc0NBQXNDO0FBQ3RDO0VBQ0UsVUFBVTtBQUNaOztBQUVBLHlCQUF5QjtBQUN6QjtFQUNFLG1CQUFtQjtFQUNuQixjQUFjO0FBQ2hCOztBQUVBLG1DQUFtQztBQUNuQzs7RUFFRSx3QkFBd0I7RUFDeEIscUJBQXFCO0VBQ3JCLGdCQUFnQjtFQUNoQjtJQUNFLFVBQVU7RUFDWjtBQUNGOztBQUVBLGdHQUFnRztBQUNoRztFQUNFO0lBQ0UscUJBQXFCO0VBQ3ZCOztFQUVBOzs7SUFHRSxxQ0FBcUM7SUFDckMsdUNBQXVDO0lBQ3ZDLHNDQUFzQztJQUN0QyxnQ0FBZ0M7RUFDbEM7QUFDRjs7QUFFQSxnSUFBZ0k7QUFDaEk7O0VBRUUsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixZQUFZO0FBQ2Q7QUFDQTtFQUNFLGFBQWE7RUFDYiw0QkFBNEI7QUFDOUI7QUFDQTtFQUNFLG1DQUFtQzs7RUFFbkMsK0JBQStCO0VBQy9CLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0VBQzlCLFNBQVM7RUFDVCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRTtJQUNFLDBCQUEwQjtFQUM1QjtFQUNBO0lBQ0UsOEJBQThCO0VBQ2hDO0FBQ0Y7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLHVCQUF1QjtFQUN2QixjQUFjO0VBQ2QsYUFBYTtFQUNiLFNBQVM7RUFDVCxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isc0NBQXNDO0VBQ3RDLG1DQUFtQztFQUNuQyx1QkFBdUI7RUFDdkIsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UscUNBQXFDO0FBQ3ZDOztBQUVBO0VBQ0UscURBQXFEO0FBQ3ZEOztBQUVBO0VBQ0UsbUNBQW1DO0FBQ3JDO0FBQ0E7RUFDRSwwQkFBMEI7RUFDMUIsZ0JBQWdCO0VBQ2hCLHVCQUF1QjtFQUN2QixNQUFNO0FBQ1I7QUFDQTtFQUNFLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtFQUNmLE1BQU07RUFDTixPQUFPO0VBQ1AsWUFBWTtFQUNaLFdBQVc7RUFDWCx1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiByZXNldCBldmVyeXRoaW5nICovXFxuKixcXG4qOjpiZWZvcmUsXFxuKjo6YWZ0ZXIge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuKiB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm9yZGVyOiAwIHNvbGlkIHRyYW5zcGFyZW50O1xcbn1cXG5cXG4vKiBwcmV2ZW50IGlPUyBmb250IHNpemUgY2hhbmdlICovXFxuaHRtbCB7XFxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XFxufVxcblxcbi8qIHJlc2V0IGJvZHkgbGluZS1oZWlnaHQgKi9cXG5ib2R5IHtcXG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xcbiAgbGluZS1oZWlnaHQ6IDE7XFxuICB0ZXh0LXJlbmRlcmluZzogb3B0aW1pemVTcGVlZDtcXG59XFxuXFxuLyogYWxsIG1lZGlhIGVsZW1lbnRzIHNldCB0byBibG9jayBhbmQgZnVsbCB3aWR0aCAqL1xcbmltZyxcXG5zdmcsXFxudmlkZW8sXFxuY2FudmFzLFxcbmF1ZGlvLFxcbmlmcmFtZSxcXG5lbWJlZCxcXG5vYmplY3Qge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBtYXgtd2lkdGg6IDEwMCU7XFxufVxcblxcbi8qIGluaGVyaXQgZm9udHMgZm9yIGlucHV0cyBhbmQgYnV0dG9ucyAqL1xcbmlucHV0LFxcbmJ1dHRvbixcXG50ZXh0YXJlYSxcXG5zZWxlY3Qge1xcbiAgZm9udDogaW5oZXJpdDtcXG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xcbiAgY29sb3I6IGluaGVyaXQ7XFxufVxcblxcbi8qIGNvbGxhcHNlIHRhYmxlICovXFxudGFibGUge1xcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xcbn1cXG5cXG4vKiBhc3NpZ24gYnV0dG9uIGhvdmVyIHN0YXRlICovXFxuYnV0dG9uLFxcbltyb2xlPVxcXCJidXR0b25cXFwiXSB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxufVxcblxcbi8qIHJlc2V0IGFuY2hvciBzdHlsZSAqL1xcbmEge1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgY29sb3I6IGluaGVyaXQ7XFxuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XFxuICAtd2Via2l0LXRhcC1oaWdobGlnaHQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG4vKiByZXNldCBoZWFkaW5nIHN0eWxlICovXFxuaDEsXFxuaDIsXFxuaDMsXFxuaDQsXFxuaDUsXFxuaDYge1xcbiAgZm9udC1zaXplOiBpbmhlcml0O1xcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XFxufVxcblxcbi8qIHJlc2V0IGxpc3Qgc3R5bGUgKi9cXG5vbCxcXG51bCB7XFxuICBsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5cXG4vKiByZXNldCB0ZXh0IGlucHV0IHN0eWxlICovXFxuW3R5cGU9XFxcImRhdGVcXFwiXSxcXG5bdHlwZT1cXFwiZGF0ZXRpbWVcXFwiXSxcXG5bdHlwZT1cXFwiZGF0ZXRpbWUtbG9jYWxcXFwiXSxcXG5bdHlwZT1cXFwiZW1haWxcXFwiXSxcXG5bdHlwZT1cXFwibW9udGhcXFwiXSxcXG5bdHlwZT1cXFwibnVtYmVyXFxcIl0sXFxuW3R5cGU9XFxcInBhc3N3b3JkXFxcIl0sXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdLFxcblt0eXBlPVxcXCJ0ZWxcXFwiXSxcXG5bdHlwZT1cXFwidGV4dFxcXCJdLFxcblt0eXBlPVxcXCJ0aW1lXFxcIl0sXFxuW3R5cGU9XFxcInVybFxcXCJdLFxcblt0eXBlPVxcXCJ3ZWVrXFxcIl0sXFxudGV4dGFyZWEsXFxuc2VsZWN0IHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcXG4gIGFwcGVhcmFuY2U6IG5vbmU7XFxuICB3aWR0aDogMTAwJTtcXG4gICY6Zm9jdXMge1xcbiAgICBvdXRsaW5lOiAwO1xcbiAgfVxcbn1cXG5cXG4vKiByZXNldCBmaXJlZm94IHBsYWNlaG9sZGVyIG9wYWNpdHkgKi9cXG46Oi1tb3otcGxhY2Vob2xkZXIge1xcbiAgb3BhY2l0eTogMTtcXG59XFxuXFxuLyogcmVzZXQgdGV4dGFyZWEgc3R5bGUgKi9cXG50ZXh0YXJlYSB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi8qIHJlc2V0IGNoZWNrYm94IGFuZCByYWRpbyBzdHlsZSAqL1xcblt0eXBlPVxcXCJjaGVja2JveFxcXCJdLFxcblt0eXBlPVxcXCJyYWRpb1xcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcXG4gIGFwcGVhcmFuY2U6IG5vbmU7XFxuICAmOmZvY3VzIHtcXG4gICAgb3V0bGluZTogMDtcXG4gIH1cXG59XFxuXFxuLyogcmVtb3ZlIGFsbCBhbmltYXRpb25zLCB0cmFuc2l0aW9ucyBhbmQgc21vb3RoIHNjcm9sbCBmb3IgcGVvcGxlIHRoYXQgcHJlZmVyIG5vdCB0byBzZWUgdGhlbSAqL1xcbkBtZWRpYSAocHJlZmVycy1yZWR1Y2VkLW1vdGlvbjogcmVkdWNlKSB7XFxuICBodG1sOmZvY3VzLXdpdGhpbiB7XFxuICAgIHNjcm9sbC1iZWhhdmlvcjogYXV0bztcXG4gIH1cXG5cXG4gICosXFxuICAqOjpiZWZvcmUsXFxuICAqOjphZnRlciB7XFxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XFxuICAgIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IDEgIWltcG9ydGFudDtcXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4wMW1zICFpbXBvcnRhbnQ7XFxuICAgIHNjcm9sbC1iZWhhdmlvcjogYXV0byAhaW1wb3J0YW50O1xcbiAgfVxcbn1cXG5cXG4vKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAgKi9cXG5oZWFkZXIsXFxuZm9vdGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIHBhZGRpbmc6IDZweDtcXG59XFxuYm9keSB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIDFmcjtcXG59XFxuOnJvb3Qge1xcbiAgLS1kYXJrLWluZGlnby1jb2xvcjogcmdiKDI5LCAwLCA4MCk7XFxuXFxuICAtLWluZGlnby1jb2xvcjogcmdiKDQ4LCAwLCAxMzApO1xcbiAgLS1ncmV5LWNvbG9yOiByZ2IoMTQ5LCAyMDQsIDI1NSk7XFxufVxcblxcbmgxIHtcXG4gIGZvbnQtc2l6ZTogNDhweDtcXG59XFxuXFxubWFpbiB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xcbiAgZ2FwOiAxMnB4O1xcbiAgcGFkZGluZzogNnB4O1xcbn1cXG5cXG5AbWVkaWEgKG1heC13aWR0aDogNjAwcHgpIHtcXG4gIG1haW4ge1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcXG4gIH1cXG4gICNtZXNzYWdlQm94IHtcXG4gICAgZ3JpZC1jb2x1bW46IHNwYW4gMSAhaW1wb3J0YW50O1xcbiAgfVxcbn1cXG5cXG4jbWVzc2FnZUJveCB7XFxuICBtYXgtaGVpZ2h0OiAyNTBweDtcXG4gIGdyaWQtY29sdW1uOiBzcGFuIDI7XFxuICBib3JkZXI6IDFweCBkYXNoZWQgZ3JleTtcXG4gIG92ZXJmbG93OiBhdXRvO1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdhcDogMTJweDtcXG4gIHBhZGRpbmc6IDEycHg7XFxufVxcblxcbltpZF49XFxcImdhbWVib2FyZFxcXCJdIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcXG4gIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEwLCAxZnIpO1xcbiAgYm9yZGVyOiAxcHggZGFzaGVkIGdyZXk7XFxuICBwYWRkaW5nOiAxMnB4O1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuLmNlbGwge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nLXRvcDogMTAwJTtcXG4gIGJvcmRlcjogMC41cHggc29saWQgYmxhY2s7XFxufVxcblxcbi5zaGlwIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWluZGlnby1jb2xvcik7XFxufVxcblxcbi5oaXQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZGFyay1pbmRpZ28tY29sb3IpICFpbXBvcnRhbnQ7XFxufVxcblxcbi5taXNzIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyZXktY29sb3IpO1xcbn1cXG4jcm91bmRCb3gge1xcbiAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XFxuICBwb3NpdGlvbjogc3RpY2t5O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICB0b3A6IDA7XFxufVxcbiNtZXNzYWdlQm94IHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuI21lc3NhZ2VCb3ggPiAqOm5vdCgjcm91bmRCb3gpIHtcXG4gIHBhZGRpbmctbGVmdDogNnB4O1xcbn1cXG5cXG4jd2lubmVyQm94IHtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHRvcDogMDtcXG4gIGxlZnQ6IDA7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICB3aWR0aDogMTAwJTtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi53aW5NZXNzYWdlIHtcXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBtYXRjaENvb3JkIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lYm9hcmQge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLm9jY3VwaWVkID0gW107XG4gICAgdGhpcy5lbXB0eSA9IEdhbWVib2FyZC5nZW5lcmF0ZWRCb2FyZDtcbiAgfVxuXG4gIHN0YXRpYyBnZW5lcmF0ZVNoaXBTcGFjZShzaGlwLCBjb29yZCwgYXhpcykge1xuICAgIGNvbnN0IHNwYWNlID0gW107XG4gICAgY29uc3QgW3N0YXJ0WCwgc3RhcnRZXSA9IGNvb3JkO1xuXG4gICAgY29uc3QgZ2V0Q29vcmRpbmF0ZXMgPSAoaSwgaikgPT4ge1xuICAgICAgY29uc3QgeCA9IGF4aXMgPT09IFwieFwiID8gaSArIHN0YXJ0WCA6IHN0YXJ0WDtcbiAgICAgIGNvbnN0IHkgPSBheGlzID09PSBcInlcIiA/IGkgKyBzdGFydFkgOiBzdGFydFk7XG4gICAgICByZXR1cm4gW3gsIHldO1xuICAgIH07XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXAubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IFt4LCB5XSA9IGdldENvb3JkaW5hdGVzKGksIGkpO1xuXG4gICAgICAvLyBDaGVjayBpZiB4IG9yIHkgaXMgb3V0c2lkZSB0aGUgdmFsaWQgcmFuZ2UgKDAgdG8gOSlcbiAgICAgIGlmICghdGhpcy5pc1ZhbGlkUmFuZ2UoeCwgeSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlOyAvLyBSZXR1cm4gZmFsc2UgaWYgb3V0c2lkZSB0aGUgdmFsaWQgcmFuZ2VcbiAgICAgIH1cblxuICAgICAgc3BhY2UucHVzaChbeCwgeV0pO1xuICAgIH1cblxuICAgIHJldHVybiBzcGFjZTtcbiAgfVxuXG4gIHN0YXRpYyBpc1ZhbGlkUmFuZ2UoeCwgeSkge1xuICAgIHJldHVybiB4ID49IDAgJiYgeCA8PSA5ICYmIHkgPj0gMCAmJiB5IDw9IDk7XG4gIH1cblxuICBzdGF0aWMgZ2VuZXJhdGVTaGlwQXJlYShzaGlwLCBjb29yZCwgYXhpcykge1xuICAgIGNvbnN0IG1hcmdpbiA9IFtdO1xuICAgIGNvbnN0IFtzdGFydFgsIHN0YXJ0WV0gPSBjb29yZDtcblxuICAgIGNvbnN0IGxpbWl0WCA9IGF4aXMgPT09IFwieVwiID8gc3RhcnRYICsgMSA6IHN0YXJ0WCArIHNoaXAubGVuZ3RoO1xuICAgIGNvbnN0IGxpbWl0WSA9IGF4aXMgPT09IFwieFwiID8gc3RhcnRZICsgMSA6IHN0YXJ0WSArIHNoaXAubGVuZ3RoO1xuXG4gICAgZm9yIChsZXQgaSA9IHN0YXJ0WCAtIDE7IGkgPD0gbGltaXRYOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSBzdGFydFkgLSAxOyBqIDw9IGxpbWl0WTsgaisrKSB7XG4gICAgICAgIC8vIENoZWNrIGlmIGkgYW5kIGogYXJlIHdpdGhpbiB0aGUgdmFsaWQgcmFuZ2UgKDAgdG8gOSlcbiAgICAgICAgaWYgKHRoaXMuaXNWYWxpZFJhbmdlKGksIGopKSB7XG4gICAgICAgICAgbWFyZ2luLnB1c2goW2ksIGpdKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBtYXJnaW47XG4gIH1cblxuICBzdGF0aWMgZ2V0IGdlbmVyYXRlZEJvYXJkKCkge1xuICAgIGNvbnN0IGJvYXJkID0gW107XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcbiAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgMTA7IGorKykge1xuICAgICAgICBib2FyZC5wdXNoKFtqLCBpXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGJvYXJkO1xuICB9XG5cbiAgc3RhdGljIGZpbHRlck91dFNwYWNlKHNwYWNlLCBhcmVhKSB7XG4gICAgLy8gY3JlYXRlIGEgbmV3IGFycmF5IHdpdGggZWxlbWVudHMgbm90IHByZXNlbnQgaW4gc3BhY2VcbiAgICBjb25zdCBmaWx0ZXJlZEFyZWEgPSBhcmVhLmZpbHRlcihcbiAgICAgIChjb29yZCkgPT5cbiAgICAgICAgIXNwYWNlLnNvbWUoXG4gICAgICAgICAgKHNwYWNlQ29vcmQpID0+XG4gICAgICAgICAgICBzcGFjZUNvb3JkWzBdID09PSBjb29yZFswXSAmJiBzcGFjZUNvb3JkWzFdID09PSBjb29yZFsxXVxuICAgICAgICApXG4gICAgKTtcblxuICAgIHJldHVybiBmaWx0ZXJlZEFyZWE7XG4gIH1cblxuICBwbGFjZShzaGlwLCBzdGFydENvb3JkLCBheGlzKSB7XG4gICAgY29uc3Qgc3BhY2UgPSBHYW1lYm9hcmQuZ2VuZXJhdGVTaGlwU3BhY2Uoc2hpcCwgc3RhcnRDb29yZCwgYXhpcyk7XG4gICAgY29uc3QgYXJlYSA9IEdhbWVib2FyZC5nZW5lcmF0ZVNoaXBBcmVhKHNoaXAsIHN0YXJ0Q29vcmQsIGF4aXMpO1xuXG4gICAgaWYgKCFzcGFjZSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgaWYgKHRoaXMuZmluZFNwYWNlKHNwYWNlKSkge1xuICAgICAgY29uc3QgbWFyZ2luID0gR2FtZWJvYXJkLmZpbHRlck91dFNwYWNlKHNwYWNlLCBhcmVhKTsgLy9maWx0ZXIgb3V0IHNoaXAgZnJvbSBhcmVhXG4gICAgICB0aGlzLmxhdW5jaFNoaXAoc2hpcCwgc3BhY2UsIG1hcmdpbik7XG5cbiAgICAgIC8vIEZpbHRlciBvdXQgZWxlbWVudHMgZnJvbSAnZW1wdHknIHRoYXQgbWF0Y2ggZWxlbWVudHMgaW4gc2hpcEFyZWFcbiAgICAgIHRoaXMucmVkdWNlRW1wdHlTcGFjZShhcmVhKTtcblxuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBmaW5kU3BhY2Uoc3BhY2UpIHtcbiAgICByZXR1cm4gc3BhY2UuZXZlcnkoKGNvb3JkKSA9PlxuICAgICAgdGhpcy5lbXB0eS5zb21lKFxuICAgICAgICAoZW1wdHlDb29yZCkgPT4gZW1wdHlDb29yZFswXSA9PT0gY29vcmRbMF0gJiYgZW1wdHlDb29yZFsxXSA9PT0gY29vcmRbMV1cbiAgICAgIClcbiAgICApO1xuICB9XG5cbiAgbGF1bmNoU2hpcChzaGlwLCBzcGFjZSwgbWFyZ2luKSB7XG4gICAgc2hpcC5zcGFjZSA9IHNwYWNlO1xuICAgIHNoaXAubWFyZ2luID0gbWFyZ2luO1xuXG4gICAgdGhpcy5vY2N1cGllZC5wdXNoKHNoaXApO1xuICB9XG5cbiAgcmVkdWNlRW1wdHlTcGFjZShzaGlwQXJlYSkge1xuICAgIHRoaXMuZW1wdHkgPSB0aGlzLmVtcHR5LmZpbHRlcihcbiAgICAgIChjb29yZCkgPT5cbiAgICAgICAgIXNoaXBBcmVhLnNvbWUoXG4gICAgICAgICAgKGFyZWFDb29yZCkgPT4gYXJlYUNvb3JkWzBdID09PSBjb29yZFswXSAmJiBhcmVhQ29vcmRbMV0gPT09IGNvb3JkWzFdXG4gICAgICAgIClcbiAgICApO1xuICB9XG59XG4iLCIvL3NlYXJjaFxuXG5mdW5jdGlvbiBhcmVDb29yZGluYXRlc0VxdWFsKGNvb3JkMSwgY29vcmQyKSB7XG4gIHJldHVybiBjb29yZDFbMF0gPT09IGNvb3JkMlswXSAmJiBjb29yZDFbMV0gPT09IGNvb3JkMlsxXTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hDb29yZChjb29yZCwgbGlzdCkge1xuICByZXR1cm4gbGlzdC5zb21lKChlbGVtZW50KSA9PiBhcmVDb29yZGluYXRlc0VxdWFsKGVsZW1lbnQsIGNvb3JkKSk7XG59XG5cbi8vZ2VuZXJhdGVcblxuZnVuY3Rpb24gcmFuZG9tQ29vcmQoKSB7XG4gIGNvbnN0IHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gIGNvbnN0IHkgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gIHJldHVybiBbeCwgeV07XG59XG5cbmZ1bmN0aW9uIHJhbmRvbUF4aXMoKSB7XG4gIGNvbnN0IGF4aXMgPSBbXCJ4XCIsIFwieVwiXTtcbiAgY29uc3QgcmFuZG9tSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBheGlzLmxlbmd0aCk7XG4gIHJldHVybiBheGlzW3JhbmRvbUluZGV4XTtcbn1cblxuLy9cblxuZXhwb3J0IHsgbWF0Y2hDb29yZCwgcmFuZG9tQ29vcmQsIHJhbmRvbUF4aXMgfTtcbiIsImltcG9ydCB7IG1hdGNoQ29vcmQgfSBmcm9tIFwiLi4vLi4vdXRpbGl0aWVzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNoaXAge1xuICBjb25zdHJ1Y3RvcihsZW5ndGgpIHtcbiAgICB0aGlzLmxlbmd0aCA9IGxlbmd0aDtcbiAgICB0aGlzLmRhbWFnZSA9IDA7XG4gICAgdGhpcy5zcGFjZSA9IFtdO1xuICAgIHRoaXMubWFyZ2luID0gW107XG4gIH1cblxuICBoaXQoKSB7XG4gICAgdGhpcy5kYW1hZ2UrKztcbiAgfVxuXG4gIGdldCBpc1N1bmsoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGFtYWdlID09PSB0aGlzLmxlbmd0aDtcbiAgfVxuXG4gIGlzRm91bmQoY29vcmRpbmF0ZXMpIHtcbiAgICByZXR1cm4gbWF0Y2hDb29yZChjb29yZGluYXRlcywgdGhpcy5zcGFjZSk7XG4gIH1cblxuICBpc01hcmdpbihjb29yZGluYXRlcykge1xuICAgIHJldHVybiBtYXRjaENvb3JkKGNvb3JkaW5hdGVzLCB0aGlzLm1hcmdpbik7XG4gIH1cbn1cbiIsImltcG9ydCBHYW1lYm9hcmQgZnJvbSBcIi4uL2dhbWVib2FyZC9nYW1lYm9hcmRcIjtcbmltcG9ydCBTaGlwIGZyb20gXCIuLi9zaGlwL3NoaXBcIjtcbmltcG9ydCB7IG1hdGNoQ29vcmQsIHJhbmRvbUF4aXMsIHJhbmRvbUNvb3JkIH0gZnJvbSBcIi4uLy4uL3V0aWxpdGllc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQbGF5ZXIge1xuICBnZXQgZmxlZXQoKSB7XG4gICAgcmV0dXJuIFtuZXcgU2hpcCg1KSwgbmV3IFNoaXAoNCksIG5ldyBTaGlwKDMpLCBuZXcgU2hpcCgzKSwgbmV3IFNoaXAoMildO1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5uYW1lO1xuICAgIHRoaXMuZ2FtZWJvYXJkID0gbmV3IEdhbWVib2FyZCgpO1xuICAgIHRoaXMub25UYXJnZXRTaG90cyA9IFtdO1xuICAgIHRoaXMubWlzc2VkU2hvdHMgPSBbXTtcbiAgfVxuXG4gIHBsYWNlU2hpcHNSYW5kKCkge1xuICAgIGNvbnN0IHF1ZXVlID0gWy4uLnRoaXMuZmxlZXRdO1xuXG4gICAgZm9yIChjb25zdCBjdXJyZW50IG9mIHF1ZXVlKSB7XG4gICAgICBsZXQgcGxhY2VkID0gZmFsc2U7XG5cbiAgICAgIHdoaWxlICghcGxhY2VkKSB7XG4gICAgICAgIGNvbnN0IGNvb3JkID0gcmFuZG9tQ29vcmQoKTtcbiAgICAgICAgY29uc3QgYXhpcyA9IHJhbmRvbUF4aXMoKTtcbiAgICAgICAgcGxhY2VkID0gdGhpcy5nYW1lYm9hcmQucGxhY2UoY3VycmVudCwgY29vcmQsIGF4aXMpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGF0dGFjayhlbmVteSwgY29vcmQpIHtcbiAgICBpZiAodGhpcy5hbHJlYWR5QXR0YWNrZWQoY29vcmQpKSByZXR1cm4gZmFsc2U7IC8vIFVuc3VjY2Vzc2Z1bCBhdHRhY2tcblxuICAgIGlmICghdGhpcy5oYW5kbGVBdHRhY2tSZXN1bHQoZW5lbXksIGNvb3JkKSkge1xuICAgICAgdGhpcy5taXNzZWRTaG90cy5wdXNoKGNvb3JkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTsgLy8gU3VjY2Vzc2Z1bCBhdHRhY2tcbiAgfVxuXG4gIGhhbmRsZUF0dGFja1Jlc3VsdChlbmVteSwgY29vcmQpIHtcbiAgICBpZiAoIWVuZW15LmlzQ29vcmRFbXB0eShjb29yZCkpIHtcbiAgICAgIGZvciAoY29uc3Qgc2hpcCBvZiBlbmVteS5nYW1lYm9hcmQub2NjdXBpZWQpIHtcbiAgICAgICAgaWYgKHNoaXAuaXNGb3VuZChjb29yZCkpIHtcbiAgICAgICAgICBzaGlwLmhpdCgpO1xuICAgICAgICAgIHRoaXMub25UYXJnZXRTaG90cy5wdXNoKGNvb3JkKTtcblxuICAgICAgICAgIGlmIChzaGlwLmlzU3Vuaykge1xuICAgICAgICAgICAgdGhpcy5vblRhcmdldFNob3RzLnB1c2goLi4uc2hpcC5tYXJnaW4sIC4uLnNoaXAuc3BhY2UpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB0cnVlOyAvLyBTdWNjZXNzZnVsbHkgYXR0YWNrZWQgYSBzaGlwXG4gICAgICAgIH0gZWxzZSBpZiAoc2hpcC5pc01hcmdpbihjb29yZCkpIHtcbiAgICAgICAgICByZXR1cm4gZmFsc2U7IC8vIEF0dGFja2VkIHRoZSBtYXJnaW4gb2YgYSBzaGlwXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7IC8vIEF0dGFja2VkIGFuIGVtcHR5IGNvb3JkaW5hdGVcbiAgfVxuXG4gIGlzQ29vcmRFbXB0eShjb29yZCkge1xuICAgIHJldHVybiBtYXRjaENvb3JkKGNvb3JkLCB0aGlzLmdhbWVib2FyZC5lbXB0eSk7XG4gIH1cblxuICBhbHJlYWR5QXR0YWNrZWQoY29vcmQpIHtcbiAgICByZXR1cm4gbWF0Y2hDb29yZChjb29yZCwgWy4uLnRoaXMubWlzc2VkU2hvdHMsIC4uLnRoaXMub25UYXJnZXRTaG90c10pO1xuICB9XG59XG4iLCJpbXBvcnQgUGxheWVyIGZyb20gXCIuLi9wbGF5ZXIvcGxheWVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWUge1xuICBjb25zdHJ1Y3RvcihwbGF5ZXJOdW1iZXIgPSAyKSB7XG4gICAgdGhpcy5fcGxheWVycyA9IHRoaXMuY3JlYXRlUGxheWVycyhwbGF5ZXJOdW1iZXIpO1xuICAgIHRoaXMuc2V0UGxheWVyTmFtZXMoKTtcblxuICAgIHRoaXMucm91bmQgPSAxO1xuICAgIHRoaXMuX3R1cm4gPSAwO1xuICAgIHRoaXMuZGVmZWF0ZWQgPSBbXTtcbiAgfVxuXG4gIGdldCBwbGF5ZXJzKCkge1xuICAgIHJldHVybiB0aGlzLl9wbGF5ZXJzO1xuICB9XG5cbiAgZ2V0IHR1cm4oKSB7XG4gICAgcmV0dXJuIHRoaXMuX3R1cm47XG4gIH1cblxuICBjcmVhdGVQbGF5ZXJzKHBsYXllck51bWJlcikge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoOiBwbGF5ZXJOdW1iZXIgfSwgKCkgPT4gbmV3IFBsYXllcigpKTtcbiAgfVxuXG4gIHNldFBsYXllck5hbWVzKCkge1xuICAgIHRoaXMuX3BsYXllcnMgPSB0aGlzLl9wbGF5ZXJzLm1hcCgocGxheWVyLCBpKSA9PiB7XG4gICAgICBjb25zdCBuZXdQbGF5ZXIgPSBuZXcgUGxheWVyKCk7XG4gICAgICBuZXdQbGF5ZXIubmFtZSA9IFwiUGxheWVyXCIgKyAoaSArIDEpO1xuICAgICAgcmV0dXJuIG5ld1BsYXllcjtcbiAgICB9KTtcbiAgfVxuXG4gIG5leHRSb3VuZCgpIHtcbiAgICB0aGlzLnJvdW5kKys7XG4gICAgdGhpcy5fdHVybiA9ICh0aGlzLl90dXJuICsgMSkgJSB0aGlzLl9wbGF5ZXJzLmxlbmd0aDtcbiAgfVxuXG4gIHN0YXRpYyBhcmVBbGxTaGlwc1N1bmsocGxheWVyKSB7XG4gICAgcmV0dXJuIHBsYXllci5nYW1lYm9hcmQub2NjdXBpZWQuZXZlcnkoKHNoaXApID0+IHNoaXAuaXNTdW5rKTtcbiAgfVxuXG4gIGlzV2lubmVyKGN1cnJlbnQpIHtcbiAgICByZXR1cm4gdGhpcy5fcGxheWVycy5zb21lKFxuICAgICAgKHBsYXllcikgPT4gcGxheWVyICE9PSBjdXJyZW50ICYmIEdhbWUuYXJlQWxsU2hpcHNTdW5rKHBsYXllcilcbiAgICApO1xuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBEaXNwbGF5IHtcbiAgY29uc3RydWN0b3IoZ2FtZSkge1xuICAgIHRoaXMuZ2FtZSA9IGdhbWU7XG4gICAgdGhpcy5jb250YWluZXJzID0gdGhpcy5yZW5kZXJCb2FyZHMoKTtcbiAgICB0aGlzLm1lc3NhZ2VCb3ggPSBnZW5lcmF0ZU1lc3NhZ2VCb3goKTtcbiAgICB0aGlzLndpbm5lckJveCA9IGdlbmVyYXRlV2lubmVyQm94KCk7XG4gIH1cblxuICByZW5kZXJCb2FyZHMoKSB7XG4gICAgY29uc3QgY29udGFpbmVycyA9IFtdO1xuXG4gICAgdGhpcy5nYW1lLnBsYXllcnMuZm9yRWFjaCgocGxheWVyKSA9PiB7XG4gICAgICBjb25zdCBjb250YWluZXIgPSBnZW5lcmF0ZUdhbWVCb2FyZChwbGF5ZXIubmFtZSk7XG4gICAgICBjb25zdCBjZWxscyA9IGdlbmVyYXRlQ2VsbHMocGxheWVyLmdhbWVib2FyZCk7XG5cbiAgICAgIGFwcGVuZEdhbWVCb2FyZChjb250YWluZXIsIGNlbGxzKTtcblxuICAgICAgY29udGFpbmVycy5wdXNoKGNvbnRhaW5lcik7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gY29udGFpbmVycztcbiAgfVxuXG4gIGdldENvb3JkRnJvbUNlbGwoZWwpIHtcbiAgICBjb25zdCBpZCA9IGVsLmlkO1xuICAgIGlmIChpZCkge1xuICAgICAgY29uc3QgW3gsIHldID0gaWQuc3BsaXQoXCItXCIpLm1hcChOdW1iZXIpO1xuICAgICAgcmV0dXJuIFt4LCB5XTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gSGFuZGxlIHRoZSBjYXNlIHdoZXJlIHRoZSBpZCBpcyBub3QgcHJlc2VudCBvciBub3QgaW4gdGhlIGV4cGVjdGVkIGZvcm1hdFxuICAgICAgY29uc29sZS5lcnJvcihcIkludmFsaWQgb3IgbWlzc2luZyBpZCBmb3IgdGhlIGNlbGwgZWxlbWVudFwiKTtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfVxuXG4gIGdldEVuZW15SW5kZXhGcm9tQ2VsbChlbCkge1xuICAgIGNvbnN0IGlkID0gZWwuaWQ7XG4gICAgY29uc3QgbWF0Y2ggPSBpZC5tYXRjaCgvZ2FtZWJvYXJkLVBsYXllcihcXGQrKS8pO1xuXG4gICAgaWYgKG1hdGNoICYmIG1hdGNoWzFdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBwYXJzZUludChtYXRjaFsxXSwgMTApO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBIYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIElEIGRvZXNuJ3QgbWF0Y2ggdGhlIGV4cGVjdGVkIGZvcm1hdFxuICAgICAgY29uc29sZS5lcnJvcihcIkludmFsaWQgb3IgbWlzc2luZyBJRCBmb3JtYXQgZm9yIHRoZSBlbGVtZW50XCIpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XG5cbiAgZ2V0Q29vcmRGcm9tUHJvbXB0KGxlbmd0aCkge1xuICAgIGNvbnN0IGlucHV0ID0gcHJvbXB0KFxuICAgICAgYFlvdSBhcmUgcGxhY2luZyBzaGlwIG9mIGxlbmd0aCAke2xlbmd0aH0uIEVudGVyIGNvb3JkaW5hdGVzIGluIHRoZSBmb3JtYXQgJ3gseSc6YFxuICAgICk7XG5cbiAgICBpZiAoaW5wdXQpIHtcbiAgICAgIGNvbnN0IFt4LCB5XSA9IGlucHV0LnNwbGl0KFwiLFwiKS5tYXAoTnVtYmVyKTtcblxuICAgICAgLy8gQ2hlY2sgaWYgYm90aCB4IGFuZCB5IGFyZSB2YWxpZCBudW1iZXJzXG4gICAgICBpZiAoIWlzTmFOKHgpICYmICFpc05hTih5KSkge1xuICAgICAgICByZXR1cm4gW3gsIHldO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcbiAgICAgICAgICBcIkludmFsaWQgaW5wdXQuIFBsZWFzZSBlbnRlciB2YWxpZCBudW1lcmljYWwgY29vcmRpbmF0ZXMuXCJcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5lcnJvcihcIlVzZXIgY2FuY2VsZWQgb3IgZW50ZXJlZCBlbXB0eSBpbnB1dC5cIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7IC8vIFJldHVybiBudWxsIG9yIGhhbmRsZSB0aGUgY2FzZSB3aGVyZSB0aGUgaW5wdXQgaXMgaW52YWxpZFxuICB9XG5cbiAgZ2V0QXhpc0Zyb21Qcm9tcHQoKSB7XG4gICAgY29uc3QgaW5wdXQgPSBwcm9tcHQoXCJFbnRlciAneCcgb3IgJ3knOlwiKTtcblxuICAgIGlmIChpbnB1dCkge1xuICAgICAgY29uc3QgYXhpcyA9IGlucHV0LnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgIGlmIChheGlzID09PSBcInhcIiB8fCBheGlzID09PSBcInlcIikge1xuICAgICAgICByZXR1cm4gYXhpcztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJJbnZhbGlkIGlucHV0LiBQbGVhc2UgZW50ZXIgJ3gnIG9yICd5Jy5cIik7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoXCJVc2VyIGNhbmNlbGVkIG9yIGVudGVyZWQgZW1wdHkgaW5wdXQuXCIpO1xuICAgIH1cblxuICAgIHJldHVybiBudWxsOyAvLyBSZXR1cm4gbnVsbCBvciBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIGlucHV0IGlzIGludmFsaWRcbiAgfVxuXG4gIGdldFBsYWNlbWVudE1vZGVGcm9tUHJvbXB0KCkge1xuICAgIHJldHVybiBwcm9tcHQoXG4gICAgICBcIlBsZWFzZSBwcmVzcyAnT0snIHRvIGNob29zZSByYW5kb20gc2hpcCBwbGFjZW1lbnQsIG9yIGVudGVyICdjdXN0b20nIHRvIG1hbnVhbGx5IGN1c3RvbWl6ZSB0aGUgcGxhY2VtZW50LlwiXG4gICAgKTtcbiAgfVxuXG4gIGFkZExpc3RlbmVycyhjYiwgY29udGFpbmVySUQpIHtcbiAgICBjb25zdCBjb250YWluZXJFbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVySUQpO1xuICAgIGNvbnRhaW5lckVsLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBjYik7XG4gIH1cblxuICByb3VuZChuYiwgcGxheWVyKSB7XG4gICAgY29uc3Qgc3RyaW5nID0gYFJvdW5kICR7bmJ9OiAke3BsYXllci5uYW1lfSB0dXJuLmA7XG4gICAgdGhpcy5hcHBlbmRSb3VuZE1lc3NhZ2Uoc3RyaW5nLCBcInJvdW5kTWVzc2FnZVwiKTtcbiAgfVxuXG4gIGF0dGFjayhwbGF5ZXIsIGVuZW15LCBjb29yZCkge1xuICAgIGNvbnN0IGhpdE1lc3NhZ2UgPSBgJHtwbGF5ZXIubmFtZX06IGhpdCAke2VuZW15Lm5hbWV9IHNoaXAgYXQgWyR7Y29vcmR9XS5gO1xuICAgIGNvbnN0IG1pc3NNZXNzYWdlID0gYCR7cGxheWVyLm5hbWV9OiBtaXNzLmA7XG5cbiAgICBmb3IgKGNvbnN0IHNob3Qgb2YgcGxheWVyLm9uVGFyZ2V0U2hvdHMpIHtcbiAgICAgIGNvbnN0IHRhcmdldEVsID0gZmluZEVsKGVuZW15LCBzaG90KTtcbiAgICAgIHRhcmdldEVsLmNsYXNzTGlzdC5hZGQoXCJoaXRcIik7XG4gICAgfVxuXG4gICAgZm9yIChjb25zdCBtaXNzZWQgb2YgcGxheWVyLm1pc3NlZFNob3RzKSB7XG4gICAgICBjb25zdCB0YXJnZXRFbCA9IGZpbmRFbChlbmVteSwgbWlzc2VkKTtcbiAgICAgIHRhcmdldEVsLmNsYXNzTGlzdC5hZGQoXCJtaXNzXCIpO1xuICAgIH1cblxuICAgIC8vIEFwcGVuZCB0aGUgbWVzc2FnZSBvdXRzaWRlIG9mIHRoZSBsb29wc1xuICAgIGlmIChwbGF5ZXIub25UYXJnZXRTaG90cy5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLmFwcGVuZE1lc3NhZ2UoaGl0TWVzc2FnZSwgXCJoaXRNZXNzYWdlXCIpO1xuICAgIH0gZWxzZSBpZiAocGxheWVyLm1pc3NlZFNob3RzLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuYXBwZW5kTWVzc2FnZShtaXNzTWVzc2FnZSwgXCJtaXNzTWVzc2FnZVwiKTtcbiAgICB9XG4gIH1cblxuICBzaGlwcyhwbGF5ZXIpIHtcbiAgICBjb25zdCBzaGlwcyA9IHBsYXllci5nYW1lYm9hcmQub2NjdXBpZWQ7XG5cbiAgICBmb3IgKGNvbnN0IHNoaXAgb2Ygc2hpcHMpIHtcbiAgICAgIGZvciAoY29uc3Qgc3BhY2Ugb2Ygc2hpcC5zcGFjZSkge1xuICAgICAgICAvLyBGaW5kIGVsZW1lbnQgIyR7eH0tJHt5fSBpbnNpZGUgI2dhbWVib2FyZC0ke3BsYXllci5uYW1lfVxuICAgICAgICBjb25zdCB0YXJnZXRFbCA9IGZpbmRFbChwbGF5ZXIsIHNwYWNlKTtcblxuICAgICAgICBpZiAodGFyZ2V0RWwpIHtcbiAgICAgICAgICAvLyBTZXQgZWxlbWVudCBjbGFzcyB0byBcInNoaXBcIlxuICAgICAgICAgIHRhcmdldEVsLmNsYXNzTGlzdC5hZGQoXCJzaGlwXCIpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYEVsZW1lbnQgd2l0aCBzZWxlY3RvciAke2VsZW1lbnRTZWxlY3Rvcn0gbm90IGZvdW5kLmApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgd2lubmVyKHBsYXllcikge1xuICAgIGNvbnN0IHdpbk1lc3NhZ2UgPSBgLS0gJHtwbGF5ZXIubmFtZX0gd2lucyB0aGUgZ2FtZSAtLWA7XG4gICAgdGhpcy5hcHBlbmRNZXNzYWdlKHdpbk1lc3NhZ2UsIFwid2luTWVzc2FnZVwiKTtcbiAgICB0aGlzLnNob3dXaW5uZXIocGxheWVyLm5hbWUpO1xuICB9XG5cbiAgaW52YWxpZFBsYWNlbWVudCgpIHtcbiAgICBjb25zb2xlLmxvZyhcIkludmFsaWQgcGxhY2VtZW50LiBUcnkgYWdhaW4uXCIpO1xuICB9XG5cbiAgYXBwZW5kTWVzc2FnZShzdHJpbmcsIGVsQ2xhc3MgPSBcIm1lc3NhZ2VcIikge1xuICAgIGNvbnN0IHBhcmEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwicFwiKTtcbiAgICBwYXJhLmNsYXNzTGlzdC5hZGQoZWxDbGFzcyk7XG5cbiAgICBwYXJhLnRleHRDb250ZW50ID0gc3RyaW5nO1xuICAgIHRoaXMubWVzc2FnZUJveC5hcHBlbmQocGFyYSk7XG5cbiAgICB0aGlzLm1lc3NhZ2VCb3guc2Nyb2xsVG9wID0gdGhpcy5tZXNzYWdlQm94LnNjcm9sbEhlaWdodDtcbiAgfVxuXG4gIGFwcGVuZFJvdW5kTWVzc2FnZShzdHJpbmcsIGVsQ2xhc3MgPSBcInJvdW5kXCIpIHtcbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJvdW5kQm94XCIpO1xuICAgIGNvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiO1xuXG4gICAgY29uc3QgcGFyYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgIHBhcmEuY2xhc3NMaXN0LmFkZChlbENsYXNzKTtcblxuICAgIHBhcmEudGV4dENvbnRlbnQgPSBzdHJpbmc7XG4gICAgY29udGFpbmVyLmFwcGVuZChwYXJhKTtcbiAgfVxuXG4gIHNob3dXaW5uZXIobmFtZSkge1xuICAgIGNvbnN0IHdpbm5lckVsID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3aW5uZXJCb3hcIik7XG4gICAgY29uc3QgcGFyYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xuICAgIHBhcmEudGV4dENvbnRlbnQgPSBgLS0gJHtuYW1lfSB3aW5zIHRoZSBnYW1lIC0tYDtcbiAgICB3aW5uZXJFbC5hcHBlbmQocGFyYSk7XG4gICAgd2lubmVyRWwuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICB9XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlV2lubmVyQm94KCkge1xuICBjb25zdCB3aW5uZXJFbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIHdpbm5lckVsLmlkID0gXCJ3aW5uZXJCb3hcIjtcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh3aW5uZXJFbCk7XG59XG5cbmZ1bmN0aW9uIGFwcGVuZEdhbWVCb2FyZChjb250YWluZXIsIGNlbGxzKSB7XG4gIGNlbGxzLmZvckVhY2goKGNlbGwpID0+IHtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoY2VsbCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZW5lcmF0ZUdhbWVCb2FyZChpKSB7XG4gIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gIGNvbnRhaW5lci5pZCA9IGBnYW1lYm9hcmQtJHtpfWA7XG5cbiAgY29uc3QgbWFpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xuICBtYWluLmFwcGVuZENoaWxkKGNvbnRhaW5lcik7XG5cbiAgcmV0dXJuIGNvbnRhaW5lcjtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVNZXNzYWdlQm94KCkge1xuICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjb250YWluZXIuaWQgPSBgbWVzc2FnZUJveGA7XG5cbiAgLy8gQ3JlYXRlIHJvdW5kQm94IGVsZW1lbnRcbiAgY29uc3Qgcm91bmRCb3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICByb3VuZEJveC5pZCA9IFwicm91bmRCb3hcIjtcblxuICAvLyBBcHBlbmQgcm91bmRCb3ggdG8gY29udGFpbmVyXG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChyb3VuZEJveCk7XG5cbiAgLy8gQ3JlYXRlIGFuZCBhcHBlbmQgaHIgZWxlbWVudFxuICBjb25zdCBockVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaHJcIik7XG4gIGNvbnRhaW5lci5hcHBlbmRDaGlsZChockVsZW1lbnQpO1xuXG4gIGNvbnN0IG1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWFpblwiKTtcbiAgbWFpbi5hcHBlbmRDaGlsZChjb250YWluZXIpO1xuXG4gIHJldHVybiBjb250YWluZXI7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlQ2VsbHMoZ2FtZWJvYXJkKSB7XG4gIGNvbnN0IGVtcHR5Q2VsbHMgPSBnYW1lYm9hcmQuZW1wdHkubWFwKChlbGVtZW50KSA9PiBnZW5lcmF0ZUNlbGwoZWxlbWVudCkpO1xuXG4gIHJldHVybiBbLi4uZW1wdHlDZWxsc107XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlQ2VsbChlbGVtZW50KSB7XG4gIC8vY2xhc3MgbXVzdCBjb250YWluIG9iamVjdCBwcm9wZXJ0eSBuYW1lIGVtcHR5LCBtYXJnaW4gb3Igc3BhY2VcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgZGl2LmNsYXNzTGlzdC5hZGQoXCJjZWxsXCIpO1xuICBkaXYuaWQgPSBgJHtlbGVtZW50WzBdfS0ke2VsZW1lbnRbMV19YDtcbiAgcmV0dXJuIGRpdjtcbn1cblxuZnVuY3Rpb24gZmluZEVsKHBsYXllciwgY29vcmQpIHtcbiAgY29uc3QgW3gsIHldID0gY29vcmQ7XG4gIC8vIEZpbmQgZWxlbWVudCAjJHt4fS0ke3l9IGluc2lkZSAjZ2FtZWJvYXJkLSR7cGxheWVyLm5hbWV9XG4gIGNvbnN0IGVsZW1lbnRTZWxlY3RvciA9IGAjZ2FtZWJvYXJkLSR7cGxheWVyLm5hbWV9IFtpZD1cIiR7eH0tJHt5fVwiXWA7XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnRTZWxlY3Rvcik7XG59XG4iLCJpbXBvcnQgXCIuL3N0eWxlLmNzc1wiO1xuaW1wb3J0IEdhbWUgZnJvbSBcIi4vaW5kZXhfbW9kdWxlcy9kYXRhL2dhbWUvZ2FtZVwiO1xuaW1wb3J0IERpc3BsYXkgZnJvbSBcIi4vaW5kZXhfbW9kdWxlcy9kaXNwbGF5L2Rpc3BsYXlcIjtcbmltcG9ydCB7IHJhbmRvbUNvb3JkIH0gZnJvbSBcIi4vaW5kZXhfbW9kdWxlcy91dGlsaXRpZXNcIjtcblxuY2xhc3MgR2FtZUNvbnRyb2xsZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmdhbWUgPSBuZXcgR2FtZSgpO1xuICAgIHRoaXMuZGlzcGxheSA9IG5ldyBEaXNwbGF5KHRoaXMuZ2FtZSk7XG4gICAgdGhpcy5pc1JvdW5kSW5Qcm9ncmVzcyA9IGZhbHNlO1xuICAgIHRoaXMud2lubmVySXNGb3VuZCA9IGZhbHNlO1xuICB9XG5cbiAgZ2V0IGN1cnJlbnRSb3VuZCgpIHtcbiAgICByZXR1cm4gdGhpcy5nYW1lLnJvdW5kO1xuICB9XG5cbiAgZ2V0IGN1cnJlbnRQbGF5ZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuZ2FtZS5wbGF5ZXJzW3RoaXMuZ2FtZS50dXJuXTtcbiAgfVxuXG4gIGluaXQoKSB7XG4gICAgdGhpcy5wbGFjZVNoaXBzKCk7XG4gICAgdGhpcy5kaXNwbGF5LmFkZExpc3RlbmVycyh0aGlzLnBsYXlSb3VuZCwgXCIjZ2FtZWJvYXJkLVBsYXllcjJcIik7IC8vYWRkIGxpc3RlbmVyIHRvIGVuZW15IGdhbWVib2FyZFxuICAgIHRoaXMuZGlzcGxheS5yb3VuZCh0aGlzLmN1cnJlbnRSb3VuZCwgdGhpcy5jdXJyZW50UGxheWVyKTtcbiAgfVxuXG4gIHBsYWNlU2hpcHMoKSB7XG4gICAgLy9pZiBpcyBwbGF5ZXJcbiAgICBjb25zdCBwbGF5ZXIgPSB0aGlzLmdhbWUucGxheWVyc1swXTtcblxuICAgIC8vYXNrIGlmIHNob3VsZCBwbGFjZSBzaGlwcyByYW5kb21seSBvciBieSBoYW5kXG4gICAgY29uc3QgcGxhY2VtZW50TW9kZSA9IHRoaXMuZGlzcGxheS5nZXRQbGFjZW1lbnRNb2RlRnJvbVByb21wdCgpO1xuXG4gICAgaWYgKHBsYWNlbWVudE1vZGUgPT09IFwiXCIpIHtcbiAgICAgIHBsYXllci5wbGFjZVNoaXBzUmFuZCgpO1xuICAgICAgdGhpcy5kaXNwbGF5LnNoaXBzKHRoaXMuY3VycmVudFBsYXllcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucGxheWVyUGxhY2VTaGlwc0Zyb21Qcm9tcHQocGxheWVyKTtcbiAgICB9XG5cbiAgICAvL2lmIGlzIGNvbXB1dGVyXG4gICAgLy9kaXNwbGF5IEFpIHBsYXllciBwbGFjZWQgc2hpcHNcbiAgICB0aGlzLmdhbWUucGxheWVyc1sxXS5wbGFjZVNoaXBzUmFuZCgpO1xuICB9XG5cbiAgcGxheWVyUGxhY2VTaGlwc0Zyb21Qcm9tcHQocGxheWVyKSB7XG4gICAgY29uc3Qgc2hpcHMgPSB0aGlzLmdhbWUucGxheWVyc1swXS5mbGVldDtcblxuICAgIGZvciAoY29uc3Qgc2hpcCBvZiBzaGlwcykge1xuICAgICAgLy9kaXNwbGF5IGVudHJ5IG1lc3NhZ2VcblxuICAgICAgbGV0IHBsYWNlZCA9IGZhbHNlO1xuXG4gICAgICB3aGlsZSAoIXBsYWNlZCkge1xuICAgICAgICBjb25zdCBjb29yZGluYXRlcyA9IHRoaXMuY29vcmRGcm9tRE9NKHNoaXAubGVuZ3RoKTtcbiAgICAgICAgY29uc3QgYXhpcyA9IHRoaXMuYXhpc0Zyb21ET00oKTtcblxuICAgICAgICBwbGFjZWQgPSBwbGF5ZXIuZ2FtZWJvYXJkLnBsYWNlKHNoaXAsIGNvb3JkaW5hdGVzLCBheGlzKTtcblxuICAgICAgICB0aGlzLmRpc3BsYXkuc2hpcHModGhpcy5jdXJyZW50UGxheWVyKTtcblxuICAgICAgICBpZiAoIXBsYWNlZCkge1xuICAgICAgICAgIHRoaXMuZGlzcGxheS5pbnZhbGlkUGxhY2VtZW50KCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjb29yZEZyb21ET00obCkge1xuICAgIGNvbnN0IGNvb3JkID0gdGhpcy5kaXNwbGF5LmdldENvb3JkRnJvbVByb21wdChsKTtcbiAgICByZXR1cm4gY29vcmQ7XG4gIH1cblxuICBheGlzRnJvbURPTSgpIHtcbiAgICBjb25zdCBheGlzID0gdGhpcy5kaXNwbGF5LmdldEF4aXNGcm9tUHJvbXB0KCk7XG4gICAgcmV0dXJuIGF4aXM7XG4gIH1cblxuICBwbGF5Um91bmQgPSAoZSkgPT4ge1xuICAgIGlmIChcbiAgICAgICF0aGlzLmlzQ2VsbEVsZW1lbnQoZSkgfHxcbiAgICAgIHRoaXMuaXNSb3VuZEluUHJvZ3Jlc3MgfHxcbiAgICAgIHRoaXMud2lubmVySXNGb3VuZFxuICAgICkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuaXNSb3VuZEluUHJvZ3Jlc3MgPSB0cnVlO1xuXG4gICAgY29uc3QgY29vcmQgPSB0aGlzLmRpc3BsYXkuZ2V0Q29vcmRGcm9tQ2VsbChlLnRhcmdldCk7XG4gICAgY29uc3QgZ2FtZWJvYXJkRWwgPSBlLnRhcmdldC5wYXJlbnRFbGVtZW50O1xuICAgIGNvbnN0IGVuZW15SW5kZXggPSB0aGlzLmRpc3BsYXkuZ2V0RW5lbXlJbmRleEZyb21DZWxsKGdhbWVib2FyZEVsKSAtIDE7XG5cbiAgICAvLyBDdXJyZW50IHBsYXllciBhdHRhY2tcbiAgICB0aGlzLnBsYXllckFjdGlvbihlbmVteUluZGV4LCBjb29yZCk7XG5cbiAgICAvLyBDb21wdXRlciBhdHRhY2sgYWZ0ZXIgYSBkZWxheVxuICAgIGlmICh0aGlzLmdhbWUudHVybiA9PT0gMSkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHRoaXMuY29tcHV0ZXJBY3Rpb24oKTtcbiAgICAgICAgdGhpcy5pc1JvdW5kSW5Qcm9ncmVzcyA9IGZhbHNlO1xuICAgICAgfSwgMTAwMCk7XG4gICAgfVxuICB9O1xuXG4gIHBsYXllckFjdGlvbihlbmVteUluZGV4LCBjb29yZCkge1xuICAgIGlmICh0aGlzLmNoZWNrRm9yV2lubmVyKCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBlbmVteSA9IHRoaXMuZ2FtZS5wbGF5ZXJzW2VuZW15SW5kZXhdO1xuICAgIGNvbnN0IHBsYXllciA9IHRoaXMuY3VycmVudFBsYXllcjtcblxuICAgIGlmICghcGxheWVyLmF0dGFjayhlbmVteSwgY29vcmQpKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBDYW4ndCBhdHRhY2sgdGhlIHNhbWUgY29vcmRpbmF0ZXMgdHdpY2UuYCk7XG4gICAgfVxuXG4gICAgdGhpcy5kaXNwbGF5LmF0dGFjayhwbGF5ZXIsIGVuZW15LCBjb29yZCk7XG5cbiAgICB0aGlzLmdhbWUubmV4dFJvdW5kKCk7XG4gICAgdGhpcy5kaXNwbGF5LnJvdW5kKHRoaXMuY3VycmVudFJvdW5kLCB0aGlzLmN1cnJlbnRQbGF5ZXIpO1xuICB9XG5cbiAgY29tcHV0ZXJBY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuY2hlY2tGb3JXaW5uZXIoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGVuZW15ID0gdGhpcy5nYW1lLnBsYXllcnNbMF07XG4gICAgY29uc3QgcGxheWVyID0gdGhpcy5nYW1lLnBsYXllcnNbMV07XG5cbiAgICBsZXQgc3VjY2Vzc2Z1bEF0dGFjayA9IGZhbHNlO1xuXG4gICAgd2hpbGUgKCFzdWNjZXNzZnVsQXR0YWNrKSB7XG4gICAgICBjb25zdCBjb29yZCA9IHJhbmRvbUNvb3JkKCk7XG4gICAgICBzdWNjZXNzZnVsQXR0YWNrID0gcGxheWVyLmF0dGFjayhlbmVteSwgY29vcmQpO1xuXG4gICAgICBpZiAoc3VjY2Vzc2Z1bEF0dGFjaykge1xuICAgICAgICB0aGlzLmRpc3BsYXkuYXR0YWNrKHBsYXllciwgZW5lbXksIGNvb3JkKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB0aGlzLmdhbWUubmV4dFJvdW5kKCk7XG4gICAgdGhpcy5kaXNwbGF5LnJvdW5kKHRoaXMuY3VycmVudFJvdW5kLCB0aGlzLmN1cnJlbnRQbGF5ZXIpO1xuICB9XG5cbiAgY2hlY2tGb3JXaW5uZXIoKSB7XG4gICAgaWYgKHRoaXMuZ2FtZS5pc1dpbm5lcih0aGlzLmN1cnJlbnRQbGF5ZXIpKSB7XG4gICAgICB0aGlzLmRpc3BsYXkud2lubmVyKHRoaXMuY3VycmVudFBsYXllcik7XG4gICAgICB0aGlzLndpbm5lcklzRm91bmQgPSB0cnVlO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlzQ2VsbEVsZW1lbnQoZSkge1xuICAgIHJldHVybiBlLnRhcmdldCAmJiBlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJjZWxsXCIpO1xuICB9XG59XG5cbndpbmRvdy5nYW1lQ29udHJvbGxlciA9IG5ldyBHYW1lQ29udHJvbGxlcigpO1xuZ2FtZUNvbnRyb2xsZXIuaW5pdCgpO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImxvY2FscyIsIkdhbWVib2FyZCIsIl9jbGFzc0NhbGxDaGVjayIsIm9jY3VwaWVkIiwiZW1wdHkiLCJnZW5lcmF0ZWRCb2FyZCIsInZhbHVlIiwic2hpcCIsImNvb3JkIiwiYXhpcyIsInNwYWNlIiwiX2Nvb3JkIiwiX3NsaWNlZFRvQXJyYXkiLCJzdGFydFgiLCJzdGFydFkiLCJnZXRDb29yZGluYXRlcyIsImoiLCJfZ2V0Q29vcmRpbmF0ZXMyIiwieCIsInkiLCJpc1ZhbGlkUmFuZ2UiLCJtYXJnaW4iLCJfY29vcmQyIiwibGltaXRYIiwibGltaXRZIiwiYm9hcmQiLCJhcmVhIiwiZmlsdGVyIiwic29tZSIsInNwYWNlQ29vcmQiLCJzdGFydENvb3JkIiwiZ2VuZXJhdGVTaGlwU3BhY2UiLCJnZW5lcmF0ZVNoaXBBcmVhIiwiZmluZFNwYWNlIiwiZmlsdGVyT3V0U3BhY2UiLCJsYXVuY2hTaGlwIiwicmVkdWNlRW1wdHlTcGFjZSIsIl90aGlzIiwiZXZlcnkiLCJlbXB0eUNvb3JkIiwic2hpcEFyZWEiLCJhcmVhQ29vcmQiLCJtYXRjaENvb3JkIiwiY29vcmQyIiwiY29vcmQxIiwicmFuZG9tQ29vcmQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJyYW5kb21BeGlzIiwiU2hpcCIsImRhbWFnZSIsImNvb3JkaW5hdGVzIiwiUGxheWVyIiwibmFtZSIsImdhbWVib2FyZCIsIm9uVGFyZ2V0U2hvdHMiLCJtaXNzZWRTaG90cyIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiLCJfdG9Db25zdW1hYmxlQXJyYXkiLCJmbGVldCIsInMiLCJkb25lIiwiY3VycmVudCIsInBsYWNlZCIsInBsYWNlIiwiZXJyIiwiZiIsImVuZW15IiwiYWxyZWFkeUF0dGFja2VkIiwiaGFuZGxlQXR0YWNrUmVzdWx0IiwiaXNDb29yZEVtcHR5IiwiX3N0ZXAyIiwiX2l0ZXJhdG9yMiIsIl90aGlzJG9uVGFyZ2V0U2hvdHMiLCJpc0ZvdW5kIiwiaGl0IiwiaXNTdW5rIiwiaXNNYXJnaW4iLCJHYW1lIiwicGxheWVyTnVtYmVyIiwiYXJndW1lbnRzIiwiX3BsYXllcnMiLCJjcmVhdGVQbGF5ZXJzIiwic2V0UGxheWVyTmFtZXMiLCJyb3VuZCIsIl90dXJuIiwiZGVmZWF0ZWQiLCJwbGF5ZXIiLCJBcnJheSIsImZyb20iLCJuZXdQbGF5ZXIiLCJhcmVBbGxTaGlwc1N1bmsiLCJEaXNwbGF5IiwiZ2FtZSIsIndpbm5lckVsIiwiY29udGFpbmVycyIsInJlbmRlckJvYXJkcyIsIm1lc3NhZ2VCb3giLCJjb250YWluZXIiLCJyb3VuZEJveCIsImhyRWxlbWVudCIsImdlbmVyYXRlTWVzc2FnZUJveCIsIndpbm5lckJveCIsImJvZHkiLCJwbGF5ZXJzIiwiZm9yRWFjaCIsImdlbmVyYXRlR2FtZUJvYXJkIiwiY2VsbHMiLCJjZWxsIiwiYXBwZW5kR2FtZUJvYXJkIiwiZGl2IiwiY2xhc3NMaXN0IiwiYWRkIiwiZ2VuZXJhdGVDZWxsIiwiZWwiLCJfaWQkc3BsaXQkbWFwMiIsInNwbGl0IiwiTnVtYmVyIiwiY29uc29sZSIsImVycm9yIiwibWF0Y2giLCJwYXJzZUludCIsImlucHV0IiwicHJvbXB0IiwiX2lucHV0JHNwbGl0JG1hcDIiLCJpc05hTiIsInRvTG93ZXJDYXNlIiwiY2IiLCJjb250YWluZXJJRCIsImFkZEV2ZW50TGlzdGVuZXIiLCJuYiIsInN0cmluZyIsImFwcGVuZFJvdW5kTWVzc2FnZSIsImhpdE1lc3NhZ2UiLCJtaXNzTWVzc2FnZSIsImZpbmRFbCIsImFwcGVuZE1lc3NhZ2UiLCJfc3RlcDMiLCJfaXRlcmF0b3IzIiwiX3N0ZXA0IiwiX2l0ZXJhdG9yNCIsInRhcmdldEVsIiwiZWxlbWVudFNlbGVjdG9yIiwid2luTWVzc2FnZSIsInNob3dXaW5uZXIiLCJsb2ciLCJlbENsYXNzIiwicGFyYSIsInRleHRDb250ZW50IiwiYXBwZW5kIiwic2Nyb2xsVG9wIiwic2Nyb2xsSGVpZ2h0IiwiZ2V0RWxlbWVudEJ5SWQiLCJpbm5lckhUTUwiLCJkaXNwbGF5IiwiR2FtZUNvbnRyb2xsZXIiLCJpc0NlbGxFbGVtZW50IiwiaXNSb3VuZEluUHJvZ3Jlc3MiLCJ3aW5uZXJJc0ZvdW5kIiwiZ2V0Q29vcmRGcm9tQ2VsbCIsImdhbWVib2FyZEVsIiwicGFyZW50RWxlbWVudCIsImVuZW15SW5kZXgiLCJnZXRFbmVteUluZGV4RnJvbUNlbGwiLCJwbGF5ZXJBY3Rpb24iLCJ0dXJuIiwic2V0VGltZW91dCIsImNvbXB1dGVyQWN0aW9uIiwicGxhY2VTaGlwcyIsImFkZExpc3RlbmVycyIsInBsYXlSb3VuZCIsImN1cnJlbnRSb3VuZCIsImN1cnJlbnRQbGF5ZXIiLCJnZXRQbGFjZW1lbnRNb2RlRnJvbVByb21wdCIsInBsYWNlU2hpcHNSYW5kIiwic2hpcHMiLCJwbGF5ZXJQbGFjZVNoaXBzRnJvbVByb21wdCIsImNvb3JkRnJvbURPTSIsImF4aXNGcm9tRE9NIiwiaW52YWxpZFBsYWNlbWVudCIsImwiLCJnZXRDb29yZEZyb21Qcm9tcHQiLCJnZXRBeGlzRnJvbVByb21wdCIsImNoZWNrRm9yV2lubmVyIiwiYXR0YWNrIiwibmV4dFJvdW5kIiwic3VjY2Vzc2Z1bEF0dGFjayIsImlzV2lubmVyIiwid2lubmVyIiwiY29udGFpbnMiLCJnYW1lQ29udHJvbGxlciIsImluaXQiXSwic291cmNlUm9vdCI6IiJ9